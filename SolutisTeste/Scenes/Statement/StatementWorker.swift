//
//  StatementWorker.swift
//  SolutisTeste
//
//  Created by Virtual Machine on 16/09/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SVProgressHUD

// criar um protocolo para que meu interactor utilize o protocolo para poder chamar meu worker

protocol StatementWorkerProtocol {
    func loadStatement(token: String, completionHandler: @escaping(Result<[StatementData], Error>) -> Void)
}

class StatementWorker: StatementWorkerProtocol {
    
    let apiRequester: APIRequestProtocol
    let utils: UtilsProtocol
    
    init(apiRequester: APIRequestProtocol, utils: UtilsProtocol) {
        self.apiRequester = apiRequester
        self.utils = utils
    }
    
    //MARK:- API Call
    func loadStatement(token: String, completionHandler: @escaping(Result<[StatementData], Error>) -> Void) {
        
        SVProgressHUD.show()
        
        APIRequest().loadStatement(token){ result in
            switch result{
            case.success(let result):
                completionHandler(.success(result))
            case.failure(let error):
                completionHandler(.failure(error))
            }
            
        }
    }
}
