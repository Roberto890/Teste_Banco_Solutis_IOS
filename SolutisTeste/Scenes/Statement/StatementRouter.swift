//
//  StatementRouter.swift
//  SolutisTeste
//
//  Created by Virtual Machine on 16/09/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

    //MARK:- Protocol to do segue
@objc protocol StatementRoutingLogic {
    func routeToLogin(segue: UIStoryboardSegue?)
}
    //MARK:- Stored data (interactor take this data and we can get)
protocol StatementDataPassing {
    var dataStore: StatementDataStore? { get }
}

    // MARK:- Route
class StatementRouter: NSObject, StatementRoutingLogic, StatementDataPassing {

    weak var viewController: StatementViewController?
    var dataStore: StatementDataStore?
    
    // MARK:- Do the segue
    func routeToLogin(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let destinationVC = segue.destination as! LoginViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToLogin(source: dataStore!, destination: &destinationDS)
        } else {
            let storyboard = UIStoryboard(name: "Main", bundle: nil)
            let destinationVC = storyboard.instantiateViewController(withIdentifier: "LoginViewController") as! LoginViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToLogin(source: dataStore!, destination: &destinationDS)
            navigateToLogin(source: viewController!, destination: destinationVC)
        }
    }
    
    // MARK:- Do the navigation to next view controller
    func navigateToLogin(source: StatementViewController, destination: LoginViewController) {
        source.show(destination, sender: nil)
    }
    
    // MARK:- Passing data to view controller
    func passDataToLogin(source: StatementDataStore, destination: inout LoginDataStore) {
    }
}
