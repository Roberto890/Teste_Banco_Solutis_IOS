//
//  StatementPresenter.swift
//  SolutisTeste
//
//  Created by Virtual Machine on 16/09/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

    //MARK:- Presenter Protocols - called in interactor
protocol StatementPresenterProtocol {
    func presentSomething(response: Statement.doLogout.Response)
    func presentUserData(response: Statement.loadUser.Response)
    func presentLoadStatement(response: Statement.loadStatement.Response)
    func presentLoadStatementError(_ error: String)
}

class StatementPresenter: StatementPresenterProtocol {
   
    //MARK:- Interactor Variables
    weak var viewController: StatementViewControllerProtocol?
    
    // MARK:- Interactor functions(reicive interactor/ pass to viewController)
    func presentSomething(response: Statement.doLogout.Response) {
        let viewModel = Statement.doLogout.ViewModel()
        viewController?.displayDoLogout(viewModel: viewModel)
    }
    
    func presentUserData(response: Statement.loadUser.Response) {
        let loadUser = Statement.loadUser.ViewModel(user: response.user)
        viewController?.displayUserData(loadUser: loadUser)
    }
    
    func presentLoadStatement(response: Statement.loadStatement.Response) {
        let loadStatement = Statement.loadStatement.ViewModel(statement: response.statement)
        viewController?.displayLoadStatement(statementData: loadStatement)
    }
    func presentLoadStatementError(_ error: String) {
        viewController?.displayLoadStatementError(error: error)
    }
    
}
